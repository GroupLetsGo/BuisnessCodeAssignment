1. Is the following code legal?

    try {
    
    } finally {
    
    }

    Answer: Yes, it is legal. After a 'try' statement, there does not must have a 'catch' statement for there to be a 'finally' statement.

2. What exception types can be caught by the following handler?
    
    catch (Exception e) {
     
    }
    
    What is wrong with using this type of exception handler?
    
    Answer for a): This handler catches exceptions of type 'Exception', therefore, it catches any exception. 
    Answer for b) : The type of exception is not specified which will become messy

3. Is there anything wrong with the following exception handler as written? Will this code compile?

    try {

    } catch (Exception e) {
    
    } catch (ArithmeticException a) {
    
    }

    Answer: Yes. The second handler can never be reached considering that 'Exception e' accounts for all errors including 'ArithmeticException a' thus there is no need for a catch for 'ArithmeticException a'
            for it will not be reached

4. Match each situation in the first list with an item in the second list.
    
    a) int[] A;
       A[0] = 0;
    b) The JVM starts running your program, but the JVM can't find the Java platform classes. 
        (The Java platform classes reside in classes.zip or rt.jar.)
    c) A program is reading a stream and reaches the end of stream marker.
    d) Before closing the stream and after reaching the end of stream marker, a program tries to read the stream again.

    b) - error
    d) - checked exception
    a) - compile error
    c) - no exception